데이터베이스란

데이터( 문자, 숫자, 이미지, 음악, 영화 등등 )
데이터베이스는 데이터를 저장 관리 하기위한 프로그램
저장하는 방법은 메모장, 엑셀, 한글, 인터넷 , 폴더, 
저장한 데이터를 관리 하려면  목록(리스트화)  , 
데이터를 어디에 저장하였고  어떤 데이터이고, 어떤 내용이고
언제 저장했고 언제 수정했고 누가 저장했고 누가 수정하였고
누가 열어 볼수있는 권한이 있고, 등등등 을 기록 해놔야
데이터를 체계적으로 관리할 수 있다.


mysql, oracle, maria , sqlLite, ms-sql 등등등
DBMS - database management system

데이터베이스 사용하기
1. root 계정으로 사용 않하기!!( 슈퍼 관리자 계정이기에 
  보안 문제 있음 )
2. 일반 계정이나,  별도의 관리자 계정 생성하여 사용
 - 계정 만들기 sql질의문( query 문)
   create user 계정명 identified by '비밀번호';

3. 계정에 권한 부여  
 - sql질의문 (query 문)
   grant all privileges on DB명.테이블명 to 계정명;
 - 전체 데이터베이스에 권한 은 
    grant all privileges on *.* to 계정명;
    grant create, drop on *.* to 계정명;
 - 권한 해제
   revoke all privileges on *.* from 계정명;

4. 일반계정일 경우  사용할수 있는 데이터베이스 공간이
   필요하다.  데이터베이스를 생성 하기
   데이터를 저장하기 위해서는 먼저 데이터베이스가 필요하다.
   데이터베이스는 체계적으로 저장되어있는 데이터의 모음.
 - 일반적으로 데이터베이스 이름은  일반 계정명과 동일하게 사용한다. 
  예) 계정명  skyblue   ,   데이터베이스명  skyblue

 - create database 데이터베이스명;


5. 데이터 저장 및관리, 수정, 삭제, 조회를 위해
   일반계정으로 접속
  - cmd(터미널)을 통해 접속 
    로컬 접속 - mysql 명령어로 접속
         1. mysql -u 계정명 -p   
         2. 비밀번호 입력
    네트워크 접속 -   주소(mysql설치된 컴퓨터의 IP 나 도메인명
                                  port번호) 
                            -u 계정명 -p
  -  프로그램을 통해 접속 ( 네트워크 접속 방법)
     - mysql 설치된 컴퓨터 주소( 로컬 인경우  localhost )
     - 데이터베이스명 
     - 계정명과 비밀번호 

6.  테이블 만들기 - 실제 데이터가 저장되는 곳
   - create table 테이블명 ( 컬럼명1 데이터타입 , 컬럼명2 데이터타입 , 컬럼명3 데이터 타입, primary key(컬럼명) ); 
  - 테이블에는 하나 이상의 primary key 설정 하기
  - 왜?  테이블 컬럼들에 저장되는 데이터를 묶어서 레코드라고 한다.  하나의 레코드는 다른 레코드 들과 구분이 되어야 (유일값)
 관리 하기에 용이하고  데이터베이스의 무결성 충족 시켜줘야 
 하므로  primary key가 필요하다.
    ->  데이터들의 일관성 유지 
    -> 데이터의 모호함 제거
    -> 중복데이터 관리 
    -> 레코드 검색의 용이 

7. 데이터 저장
  - insert into 테이블명 (컬럼명1, 컬럼명2) values( 데이터1, 데이터2);
   -  컬럼명은 데이터가 저장될 컬럼명을 작성,  데이터는 컬럼명의 위치에 맞춰서 작성
   -  모든 컬럼에 데이터를 저장하는 경우
    - insert into 테이블명 values( 데이터1, 데이터2, 데이터3);

8.  조회, 삭제, 수정
   삭제 :  delete from 테이블명;   -> 테이블의 전체 데이터 삭제
           delete from 테이블명 where 컬럼명=값; 
               -> 해당컬럼에 저장된데이터중 값과 일치하는 
                   모든 레코드 삭제
   수정 : update 테이블명 set 컬럼명=변경값; 
           -> 테이블 전체 변경 ( 해당 컬럼데이터들이 변경값으로)
         update 테이블명 set a=10 where b='가';
    -> 테이블에서 b 컬럼의 데이터중에서 가 와 일치하는 
  모든 레코드들의 a 컬럼데이터를 10으로 변경

    조회 : select 컬럼명1, 컬럼명2 from 테이블명;
     -> 테이블에서 컬럼1, 컬럼2의 모든 데이터 출력
    select  * from 테이블명;
     -> 테이블의 전체 데이터 출력

    select age, name, tel from member where age>30; 
 -> 나이가 30초과 된 사람들의 age, name, tel 데이터 출력

 
연산자  - 산술연산자 , 비교연산자, 논리 연산자
   산술연산자 :  +, - , * , / , % 
   비교연산자 :  > , < , >=  , <=   , ==  , <> , !=
   논리연산자 : and, or, not

함수  :   count, sum, avg, max, min
  함수는 함수이름()  형식을 갖춰야 실행된다.
   예)  count()      sum()      avg() 

 like    ->   포함 데이터 조건  
   컬럼명 like 'ab%'     ab로 시작하는 데이터

 


     










